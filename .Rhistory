getwd()
getwd()
read.txt("https://github.com/razan18/BCB546-Spring2022/blob/d2fa05d94addb66e43146e404f94d9521e781d57/assignments/UNIX_Assignment/snp_position.txt")
read_txt("https://github.com/razan18/BCB546-Spring2022/blob/d2fa05d94addb66e43146e404f94d9521e781d57/assignments/UNIX_Assignment/snp_position.txt")
read_tsv("https://github.com/razan18/BCB546-Spring2022/blob/d2fa05d94addb66e43146e404f94d9521e781d57/assignments/UNIX_Assignment/snp_position.txt")
library(tidyverse)
read_tsv("https://github.com/razan18/BCB546-Spring2022/blob/d2fa05d94addb66e43146e404f94d9521e781d57/assignments/UNIX_Assignment/snp_position.txt")
read.tsv("")
read.tsv("https://github.com/gcarey1/BCB546-Spring2022/blob/main/assignments/UNIX_Assignment/intermediate_files/fang_et_al_genotypes.txt")
read_tsv("https://github.com/gcarey1/BCB546-Spring2022/blob/main/assignments/UNIX_Assignment/intermediate_files/fang_et_al_genotypes.txt")
fang<-read_tsv("https://github.com/gcarey1/BCB546-Spring2022/blob/main/assignments/UNIX_Assignment/intermediate_files/fang_et_al_genotypes.txt")
view(fang)
fang<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
view(fang)
snp<-("https://github.com/EEOB-BioData/BCB546-Spring2022/blob/9a177ced4616229470a9fa08bda50b604dbd2b8e/assignments/UNIX_Assignment/snp_position.txt")
snp<-read_tsv("https://github.com/EEOB-BioData/BCB546-Spring2022/blob/9a177ced4616229470a9fa08bda50b604dbd2b8e/assignments/UNIX_Assignment/snp_position.txt")
view(snp)
snp<-read_tsv("https://raw.githubuserconcent.com/EEOB-BioData/BCB546-Spring2022/assignments/UNIX_Assignment/snp_position.txt")
snp<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/assignments/UNIX_Assignment/snp_position.txt")
snp<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/main/assignments/UNIX_Assignment/snp_position.txt")
view(snp)
#Now I have both snp and fang files loaded and stored in objects in r
getwd()
#Now I have both snp and fang files loaded and stored in objects in r
getwd()
#Now I have both snp and fang files loaded and stored in objects in r
fanb
#Now I have both snp and fang files loaded and stored in objects in r
fang
#Now I have both snp and fang files loaded and stored in objects in r
fang, snp
#Now I have both snp and fang files loaded and stored in objects in r
fang
snp
file.size(fang)
file.size(fang.txt)
size_sum(fang)
ncol(fang,snp)
ncol(fang)
nrow(fang)
object_size(fang)
objectxsize(fang)
object.size(fang)
object.size(snp)
object.size(fang, units = "MB")
object.size(fang, units = "MB")
object_size(fang, units = "MB")
object.size(snp)
#Now I have both snp and fang files loaded and stored in objects in r
fang #this tells me that fang is a 2782X986 tibble
#so to sum it up, fang is
nrow(fang)
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 colums, and 359.384 KB.
header(snp)
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 colums, and 359.384 KB.
head(snp)
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 colums, and 359.384 KB.
head(fang)
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
head_fang<= colnames(read.csv2("fang"))
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
head_fang<= colnames(read.tsv("fang"))
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
head<= colnames(read.tsv("fang"))
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
head<= colnames(read_tsv("fang"))
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
head<- colnames(read_tsv("fang"))
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
head<- colnames(read_tsv(fang))
head
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
colnames(fang)
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
fangcols<-colnames(fang)
fangcols
snpcols<- colnames(snp)
snpc
snpcols
#for both files, SNP_ID is the first column
getwd()
#notes form wed March 9 class
getwd()
getwd()
library(janitor)
library(tidyverse)
library(dplyr)
fang<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
view(fang)
snp<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/main/assignments/UNIX_Assignment/snp_position.txt")
view(snp)
#Now I have both snp and fang files loaded and stored in objects in r
fang #this tells me that fang is a 2782X986 tibble
snp #and snp is a 983x15 tibble. Considerably smaller
object.size(fang) #23.14 MB, or 23124584 bytes
object.size(snp) #359.384 KB, or 359384 bytes
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
fangcols<-colnames(fang)
fangcols #here are the column names for my fang file
snpcols<- colnames(snp)
snpcols #and my column names for snp
#for both files, SNP_ID is the first column
#Additionally, it would be helpful to make my variables separate
#from my code as much as possible. Maybe alter it later?
maize <- filter(fang, `Group` %in% c('ZMMLR','ZMMR','ZMMIL'))
view(maize)
#this has created a subset of just the Maize values
teosinte <- filter(fang, `Group` %in% c('ZMPBA','ZMPIL','ZMPJA'))
view(teosinte)
#Now I also have a subset of teosinte data.
transteo <- t(teosinte)
view(transteo)
transmaize <- t(maize)
view(transmaize)
#Next I will cut my snp file so that I have the columns
#SNP_ID, Chromosome, Position
snpsnip <- select(snp, c('SNP_ID','Chromosome','Position'))
view(snpsnip)
#looks good. Now I will trim and add a header using the "row_to_names" function
#of the "janitor" package. Very handy!
trimteo <- row_to_names(transteo, 3, remove_row = TRUE, remove_rows_above = TRUE)
trimmaize <- row_to_names(transmaize, 3, remove_row = TRUE, remove_rows_above = TRUE)
summary(trimteo)
summary(snpsnip)
#my two dataframes are equal length and sorted in the same way.I am now ready to join
#by the common column.
view(trimmaize)
#my two dataframes are equal length and sorted in the same way.I am now ready to join
#by the common column.
teosnp <- cbind(snpsnip,trimteo)
maisnp <- cbind(snpsnip,trimmaize)
view(teosinte)
view(teosnp)
view(teosnp)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
teosnp[order(teosnp$Position)]
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
order(teosnp$Position)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
teoinc <- order(teosnp$Position)
view(teoinc)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
teosnp[order(Position)]
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
teorder <- teosnp[order(Position)]
view(teorder)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
arrange(teosnp,Position)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
view(teosnp)
arrange(teosnp,Position)
names(teosnp)
x <- teosnp$Position
view(x)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
<- filter(teosnp, `Position` %in% -c('NA',' '))
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
cut<- filter(teosnp, `Position` %in% -c('NA',' '))
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
filter(teosnp, `Position` %in% -c('NA',' '))
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
is.na(teosnp$Position)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
teosnp[is.na(teosnp)] = ?
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
quest <- teosnp[is.na(teosnp)] = ?
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
quest <- teosnp[is.na(teosnp)] = ?
view(quest)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
teosnp[is.na(teosnp)] = ?
view(teosnp)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
teosnp[is.na(teosnp)] = ?
view(teosnp)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
check <- (teosnp[is.na(teosnp)] = ?)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
check <- (teosnp[is.na(teosnp)] = "?"
view(check)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
check <- (teosnp[is.na(teosnp)] == "?"
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
teosnp[is.na(teosnp)] = "?"
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
teosnp[is.na(teosnp)] = "?"
view(teosnp)
arrange(teosnp,Position)
#arrange(teosnp,Position)
check <- filter(teosnp, `Position` %in% c('?'))
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
head(teosnp)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
is.character(teosnp$Position)
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
teosnp$Position
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == c("/Library/Frameworks/R.framework/Resources/library/base/help/assignOps","unknown", "multipls)"
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == c("/Library/Frameworks/R.framework/Resources/library/base/help/assignOps","unknown", "multipls)"
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == c("/Library/Frameworks/R.framework/Resources/library/base/help/assignOps","unknown", "multipls)"
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == c("/Library/Frameworks/R.framework/Resources/library/base/help/assignOps","unknown", "multipls)"
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == c("/Library/Frameworks/R.framework/Resources/library/base/help/assignOps","unknown", "multiple")
#"/Library/Frameworks/R.framework/Resources/library/base/help/assignOps"
teosnp$Position == c("/Library/Frameworks/R.framework/Resources/library/base/help/assignOps","unknown", "multiple"==TRUE)
teosnp$Position == "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")
df2<-teosnp[!(teosnp$Position=="unknown" | teosnp$Position=="multiple"|
teosnp$Position == "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")]
df2<-teosnp[!(teosnp$Position==unknown | teosnp$Position=="multiple"|
teosnp$Position == "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")]
df2<-teosnp[!(teosnp$Position== "unknown" | teosnp$Position=="multiple"|
teosnp$Position == "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")]
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
df2<-subset(teosnp,Position= "unknown" & Position="multiple" &
Position = "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")]
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
df2<-subset(teosnp,Position= "unknown" & Position="multiple" &
Position = "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")
df2
distinct(teosnp)
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
df2<-subset(teosnp,Position = "unknown" & Position ="multiple" &
Position = "/Library/Frameworks/R.framework/Resources/library/base/help/assignOps")
#arrange(teosnp,Position)
#names(teosnp)
#x <- teosnp$Position
df2<-subset(teosnp,Chromosome = "unknown" & Chromosome ="multiple")
df2<-subset(teosnp, Chromosome!="unknown" & Chromosome!="multiple")
df2
view(df2)
teosintesnp<-subset(teosnp, Chromosome!="unknown" & Chromosome!="multiple")
maizesnp<-subset(maisnp, Chromosome!="unknown" & Chromosome!="multiple")
#now the files are bound together, with the first three columns coming from my snp file
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files.
view(maizesnp)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable??)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
maizequest <- arrange(maizesnp, "Position")
view(maizequest)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable??)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
maizequest <- arrange(maizesnp$Position)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable??)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
maizequest <- sort(maizesnp$Position)
view(maizequest)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable??)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
maizequest <- arrange(maizesnp, "Position" by_group = FALSE)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable??)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
maizequest <- arrange(maizesnp, "Position", by_group = FALSE)
view(maizequest)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable??)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
ordered_df <- maizesnp[order(maizesnp$Position), ]
view(maizequest)
view(ordered_df)
teosintesnp<-subset(teosnp, Position!="multiple")
#my two dataframes are equal length and sorted in the same way.I am now ready to join
#by the common column.
teosnp <- cbind(snpsnip,trimteo)
teosintesnp1<-subset(teosnp, Chromosome!="unknown" & Chromosome!="multiple")
teosintesnp<-subset(teosintesnp1, Position!="multiple")
maisnp <- cbind(snpsnip,trimmaize)
maizesnp1<-subset(maisnp, Chromosome!="unknown" & Chromosome!="multiple")
maizesnp<-subset(maizesnp1, Position!="multiple")
view(maizesnp)
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable????)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
ordered_df <- maizesnp[order(maizesnp$Position), ]
view(ordered_df)
is.character(maizesnp$Position)
getwd()
library(janitor)
library(tidyverse)
library(dplyr)
fang<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/main/assignments/UNIX_Assignment/fang_et_al_genotypes.txt")
view(fang)
snp<-read_tsv("https://raw.githubusercontent.com/EEOB-BioData/BCB546-Spring2022/main/assignments/UNIX_Assignment/snp_position.txt")
view(snp)
#Now I have both snp and fang files loaded and stored in objects in r
fang #this tells me that fang is a 2782X986 tibble
snp #and snp is a 983x15 tibble. Considerably smaller
object.size(fang) #23.14 MB, or 23124584 bytes
object.size(snp) #359.384 KB, or 359384 bytes
#so to sum it up, fang is 2782 rows, 986 columns, and 23.14 MB
#while snp is 983 rows, 15 columns, and 359.384 KB.
fangcols<-colnames(fang)
fangcols #here are the column names for my fang file
snpcols<- colnames(snp)
snpcols #and my column names for snp
#for both files, SNP_ID is the first column
#Additionally, it would be helpful to make my variables separate
#from my code as much as possible. Maybe alter it later?
maize <- filter(fang, `Group` %in% c('ZMMLR','ZMMR','ZMMIL'))
view(maize)
#this has created a subset of just the Maize values
teosinte <- filter(fang, `Group` %in% c('ZMPBA','ZMPIL','ZMPJA'))
view(teosinte)
#Now I also have a subset of teosinte data.
transteo <- t(teosinte)
view(transteo)
transmaize <- t(maize)
view(transmaize)
#Next I will cut my snp file so that I have the columns
#SNP_ID, Chromosome, Position
snpsnip <- select(snp, c('SNP_ID','Chromosome','Position'))
view(snpsnip)
#looks good. Now I will trim and add a header using the "row_to_names" function
#of the "janitor" package. Very handy!
trimteo <- row_to_names(transteo, 3, remove_row = TRUE, remove_rows_above = TRUE)
trimmaize <- row_to_names(transmaize, 3, remove_row = TRUE, remove_rows_above = TRUE)
summary(trimteo)
summary(snpsnip)
#my two dataframes are equal length and sorted in the same way.I am now ready to join
#by the common column.
teosnp <- cbind(snpsnip,trimteo)
teosintesnp1<-subset(teosnp, Chromosome!="unknown" & Chromosome!="multiple")
teosintesnp<-subset(teosintesnp1, Position!="multiple")
maisnp <- cbind(snpsnip,trimmaize)
maizesnp1<-subset(maisnp, Chromosome!="unknown" & Chromosome!="multiple")
maizesnp<-subset(maizesnp1, Position!="multiple")
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable????)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
ordered_df <- maizesnp[order(maizesnp$Position), ]
view(ordered_df)
is.character(maizesnp$Position)
as.numeric(maizesnp$Position)
is.numeric(maizesnp$Position)
lapply(ordered_df$Position), as.numeric)
lapply(ordered_df$Position, as.numeric)
is.numeric((ordered_df$Position))
numeric <- lapply(ordered_df$Position, as.numeric)
is.numeric((numeric$Position))
as.numeric(as.character(ordered_df$Position))
is.numeric((ordered$df))
is.numeric((ordered_df$Position))
num <- as.numeric(as.character(ordered_df$Position))
is.numeric((num$Position))
is.numeric((num$Position))
is.numeric(num$Position)
#the problem here is that I need to have it in numeric but it's currently in character
ordered_df$Position = as.numeric(as.character(ordered_df$Position))
is.numeric(ordered_df$Position)
maisnp <- cbind(snpsnip,trimmaize)
maizesnp1<-subset(maisnp, Chromosome!="unknown" & Chromosome!="multiple")
maizesnp<-subset(maizesnp1, Position!="multiple")
#now the files are bound together, with the first three columns coming from my snp file
#I have also removed the entries that had unknown and multiple chromosomes (Is this acceptable????)
#I am now ready to move to the next step.
#now I need a file with missing data encoded by "?" and one with missing data encoded by "-"
#my file already has missing data encoded by "?".
#next step is to sort by position values for my existing files. After this point, I will
#make another file with decreasing position values and "-" in place of missing values.
maizesnp$Position = as.numeric(as.character(maizesnp$Position))
is.numeric(maizesnp$Position)
ordered_df <- maizesnp[order(maizesnp$Position), ]
view(ordered_df)
maize_quest <- maizesnp[order(maizesnp$Position), ]
maize_quest <- maizesnp[order(maizesnp$Position)
maize_quest <- maizesnp[order(maizesnp$Position) ]
maize_quest <- maizesnp[order(maizesnp$Position) ,]
#I had to convert the Position column to numeric
#Now will do the same for teosinte
teosintesnp$Position = as.numeric(as.character(teosintesnp$Position))
is.numeric(teosintesnp$Position)
teo_quest <- teosintesnp[order(teosintesnp$Position) ,]
#The next step is to reverse sort by Position and replace ? with -
FindReplace(maize_quest, Var, replaceData, from = "?", to = "-", exact = TRUE, vector = FALSE)
gsub("?","-", maize_quest)
view(maize_quest)
#The next step is to reverse sort by Position and replace ? with -
dashm <- -gsub("?","-", maize_quest)
view(dashm)
#The next step is to reverse sort by Position and replace ? with -
dashm <-gsub("?","-", maize_quest)
view(dashm)
